{"version":3,"sources":["SquareComponent.js","App.js","reportWebVitals.js","index.js"],"names":["SquareComponent","props","classes","className","state","onClick","index","clearState","App","useState","gameState","updateGameState","isXChance","updateIsXChance","onUserClicked","strings","Array","from","clearGame","useEffect","winner","checkWinner","toast","notify","lines","console","log","i","length","a","b","c","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54f1a724.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst SquareComponent = (props) => {\r\n    const classes = (props.className ? `${props.className} square` : `square`)\r\n    return (\r\n        <span\r\n            className={classes + (props.state === \"X\" ? ` fc-aqua` : ` fc-white`)}\r\n            onClick={() => props.onClick(props.index)}>\r\n           {props.state}\r\n        </span>\r\n    )\r\n}\r\nexport default SquareComponent","import React, { useEffect, useState } from \"react\";\nimport SquareComponent from \"./SquareComponent\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nconst clearState = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\n\nfunction App() {\n  const [gameState, updateGameState] = useState(clearState);\n  const [isXChance, updateIsXChance] = useState(false);\n  \n  const notify = (winner) => \n  toast(`Ta da ! ${winner} won the Game !`);\n  \n  const onUserClicked = (index) => {\n    let strings = Array.from(gameState);\n    if (strings[index]) return;\n    strings[index] = isXChance ? \"X\" : \"0\";\n    updateIsXChance(!isXChance);\n    updateGameState(strings);\n  };\n\n  const clearGame = () => {\n    updateGameState(clearState);\n  };\n  useEffect(() => {\n    let winner = checkWinner();\n    if (winner) {\n      clearGame();\n      notify(winner);\n      // toast(`Ta da ! ${winner} won the Game !`)\n    }\n  }, [gameState]);\n\n  const checkWinner = () => {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    console.log(\n      \"Class: App, Function: checkWinner ==\",\n      gameState[0],\n      gameState[1],\n      gameState[2]\n    );\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (\n        gameState[a] &&\n        gameState[a] === gameState[b] &&\n        gameState[a] === gameState[c]\n      ) {\n        return gameState[a];\n      }\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"app-header\">\n      <ToastContainer />\n      <p className=\"heading-text\">React Tic Tac Toe - With Toast</p>\n      <div className=\"row jc-center\">\n        <SquareComponent\n          className=\"b-bottom-right\"\n          onClick={() => onUserClicked(0)}\n          state={gameState[0]}\n        />\n        <SquareComponent\n          className=\"b-bottom-right\"\n          onClick={() => onUserClicked(1)}\n          state={gameState[1]}\n        />\n        <SquareComponent\n          className=\"b-bottom\"\n          onClick={() => onUserClicked(2)}\n          state={gameState[2]}\n        />\n      </div>\n      <div className=\"row jc-center\">\n        <SquareComponent\n          className=\"b-bottom-right\"\n          onClick={() => onUserClicked(3)}\n          state={gameState[3]}\n        />\n        <SquareComponent\n          className=\"b-bottom-right\"\n          onClick={() => onUserClicked(4)}\n          state={gameState[4]}\n        />\n        <SquareComponent\n          className=\"b-bottom\"\n          onClick={() => onUserClicked(5)}\n          state={gameState[5]}\n        />\n      </div>\n      <div className=\"row jc-center\">\n        <SquareComponent\n          className=\"b-right\"\n          onClick={() => onUserClicked(6)}\n          state={gameState[6]}\n        />\n        <SquareComponent\n          className=\"b-right\"\n          onClick={() => onUserClicked(7)}\n          state={gameState[7]}\n        />\n        <SquareComponent\n          onClick={() => onUserClicked(8)}\n          state={gameState[8]}\n        />\n      </div>\n      <button className=\"clear-button\" onClick={clearGame}>\n        Clear Game\n      </button>\n      <p className=\"fc-aqua fw-600\">ragOP</p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}